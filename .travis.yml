language: python
python:
  - "3.5"

sudo: required
services:
  - docker

install:
  # Install miniconda
  # -----------------
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Setup conda
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no
  - conda config --set show_channel_urls True
  - conda config --add channels conda-forge
  - conda config --add channels axiom-data-science
  - conda update --quiet conda

  # Create our environment
  # ------------------------------------
  - ENV_NAME='test'
  - conda create --quiet -n $ENV_NAME python=$TRAVIS_PYTHON_VERSION
  - source activate $ENV_NAME

  # Install testing requirements
  # ------------------------------------
  - conda install --file requirements.txt pytest
  - conda list --export

script:
  - py.test -s -rxs -v
  - conda install -n root conda-build anaconda-client
  - conda build conda-recipe
  - conda install gsps --use-local

after_success:
  - export TAG=`if [ "$TRAVIS_TAG" == "" ]; then echo "latest"; else echo $TRAVIS_TAG ; fi`
  - docker build -t axiom/gsps:$TAG .
  - docker build -t axiom/gsps2nc:$TAG -f Dockerfile-gsps2nc .
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
    docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
    docker push axiom/gsps:$TAG;
    docker push axiom/gsps2nc:$TAG;
    fi
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TAG" != "latest" ]; then
    anaconda -t $ANACONDA_TOKEN upload --force -u axiom-data-science $HOME/miniconda/**/gsps-*.tar.bz2;
    fi

deploy:
  provider: releases
  api_key:
    secure: tVXZ6R1A52gLyGfqgmnnNRDe8yfk6+T1ebwDBYeJaIU/iz3+PgwbA1RRlrnbHjYvO17n0v7GYWLi9UY6jAUKGBHJNKGrnEYLkKs258s1cilaZviWq5dsOx/ZV38d9OUnryv1uyY3EvWF702NimC3T8VbwlztSDMKka4MqlMhsxI1MqIalrdQo8IxNHVzd/GM0lmyw+CRBU65xAf3X9jTlCwlG6mc94WvzF0HqQu6SB7cxZJERb9UlmuQ2DxMJRFz8jTzG1Z+Addxz+33HZMDjzibCtIys6Zo2TP7xDflHMBXD0MmIG7CpbGgmdxz10XYfpkMwTadSlFZc+IGnkFuGwNZzhdJpm28YJgWNIW56DKNE3h9FxBcAxvuwvI4yxR+Lm50KZNylDPvAsRziQAtVkxwOsQQ7voTqrfirSsRWzde3dmlN7o+fDUHCH5mq0+0vFtXiigwG7V6ZVgC3GOq1g0QDri6rknZ+/fe3xek5u7wTIjqGQiAkLOMgfRxPsla5nM4YypL8458WhLxX0Te/axLmt5uOintuZiVc2NlFZ/3fAEJv0AN0PpnyUoC5B0ZwBinR/sxcffz63yEbi7TiNDyyxWuslY5neWcxF2hiN42Vyyc/a14gLMD3N2h9ZFuJnXcox9JSTsbzwKFdIGqS74FxMHp0wBnY4fQmuj3awc=
  on:
    tags: true
